// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with defaults 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <Toolbar />
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#ccc",
        "borderLeftWidth": 0.5,
        "borderRadius": 2,
        "borderRightWidth": 0.5,
        "borderTopWidth": 0.5,
        "elevation": 3,
        "flexWrap": "nowrap",
        "marginBottom": 5,
        "marginLeft": 2,
        "marginRight": 2,
        "marginTop": 5,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1.5,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Resources
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Navigation
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        List
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Scroll
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Grid
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Camera
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Image Picker
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Redux
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderRadius": 2,
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": 10,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 10,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Layouts
      </Text>
      <Image
        source="arrowForward"
        style={
          Object {
            "height": 15,
            "position": "absolute",
            "right": 10,
            "width": 15,
          }
        }
      />
    </View>
  </View>
</View>
`;
